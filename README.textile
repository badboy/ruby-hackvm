h1. Ruby Hack VM

h2. Information

h3. The Hack VM is a tiny, trivial, virtual machine.

Its purpose is to be used as a simple execution engine that can run very simple programs.

more Information on <a href="http://www.hacker.org/hvm/">http://www.hacker.org/hvm/</a>

The virtual machine executes a single program and terminates, either by reaching the end of the code, an '!' instruction, or because an exception was thrown during execution.
A program is represented by a string of single-character instructions.
The virtual machine starts with the first instruction, executes it, and moves on to the next instruction, etc... 
The index of the current instruction is called the program counter. 
The execution model is simple: the virtual machine has an operand stack, a memory buffer, and a call stack.
Each item on the operand stack or in memory is a cell that can hold a signed integer. 
For implementation reasons, those integers are currently limited to 32 bits, but do not count on it, they could be large in future implementations. 
The call stack is used to push the value of the program counter when jumping to a routine from which we want to return.

h2. Instructions

|_. Instruction |_. Description |
|' '|Do Nothing|

h2. Examples

Input: "78*p" Output: 56

Input: "123451^2v5:4?9p2g8pppppp" Output: 945321
